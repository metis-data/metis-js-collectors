name: Release to Private

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Specify what versioning convention we would like to deploy [premajor | preminor | prepatch | prerelease]'
        required: false
        default: 'patch'

jobs:
  deploy:
    timeout-minutes: 4
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 18.13.0
          registry-url: 'https://npm.pkg.github.com/metis-data/'
          scope: '@metis-data'

      - name: Lerna Cache
        id: lerna-cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-interceptors-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-lerna-interceptors-

      - name: Configure CI Git User
        env:
          GITHUB_PAT: ${{ secrets.PAT_FOR_COMMIT }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://$GITHUB_ACTOR:$PAT_FOR_COMMIT@github.com/metis-data/js-interceptors

      - run: lerna link

      - run: lerna bootstrap --no-private

      - name: Build
        run: lerna run build --no-private

      - name: Set environment variables
        run: echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Publish to NPM
        run: |
          if [[ ${GIT_BRANCH} = main ]]; then
            echo "MAIN Branch"
          else
            echo "${GIT_BRANCH} Branch"
          fi

          npx lerna version ${{ inputs.version }}  ---force-publish=* --message 'Release [ci skip]' --yes
          export COMMIT_MESSAGE="Release packages to private v$(cat lerna.json | jq -r .version)"
          ./scripts/update-package-json-to-private.sh
          npx lerna publish from-git --registry="https://npm.pkg.github.com/metis-data/" --no-private --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_FULL_ACCESS_GIT }}
