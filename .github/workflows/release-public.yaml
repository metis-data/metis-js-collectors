name: Release to Public
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Specify what versioning convention we would like to deploy [major | minor | patch | prerelease]'
        required: true
        default: 'minor'
jobs:
  build:
    timeout-minutes: 4
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.5
          registry-url: 'https://registry.npmjs.org/'
          scope: '@metis-data'

      - name: Lerna Cache
        id: lerna-cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lerna-interceptors-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-lerna-interceptors-
      - name: Configure CI Git User
        env:
          GITHUB_PAT: ${{ secrets.PAT_FOR_COMMIT }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://$GITHUB_ACTOR:$PAT_FOR_COMMIT@github.com/metis-data/js-interceptors
      - run: lerna link
      - run: lerna bootstrap --no-private

      - name: Build
        run: lerna run build --no-private

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_INTERCEPTOR_TOKEN }}
        run: |
          npx lerna version ${{ inputs.version }} --create-release github --force-publish --message 'Release [ci skip]' --yes
          export PACKAGE_VERSION=$(cat lerna.json | jq -r .version)
          ./scripts/update-package-json-to-public.sh
          npx lerna publish from-git --registry="https://registry.npmjs.org/" --no-private --yes
          git push --tags
